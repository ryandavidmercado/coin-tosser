{"version":3,"sources":["img/heads.png","img/tails.png","CoinFlipperCard.js","App.js","index.js"],"names":["CoinFlipperDisplay","coin","Card","Body","className","Img","variant","src","heads","tails","Title","CoinFlipperButton","flipCoin","Button","onClick","CoinFlipperLog","flipLog","length","ListGroup","Item","slice","join","CoinFlipperCount","flipCount","CoinFlipperCard","useState","setCoin","setFlipLog","setFlipCount","style","width","textAlign","Header","newCoin","Math","random","duplicate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mQAAe,MAA0B,kCCA1B,MAA0B,kC,OCSzC,SAASA,EAAT,GAAuC,IAATC,EAAQ,EAARA,KAC5B,OAAKA,EAEH,eAACC,EAAA,EAAKC,KAAN,CAAWC,UAAU,OAArB,UACE,cAACF,EAAA,EAAKG,IAAN,CACEC,QAAQ,MACRC,IAAc,MAATN,EAAeO,EAAQC,EAC5BL,UAAU,SAEZ,cAACF,EAAA,EAAKQ,MAAN,CAAYN,UAAU,mBAAtB,SACY,MAATH,EAAe,SAAW,cATf,KAepB,SAASU,EAAT,GAA0C,IAAbC,EAAY,EAAZA,SAC3B,OACE,cAACV,EAAA,EAAKC,KAAN,CAAWC,UAAU,gCAArB,SACE,cAACS,EAAA,EAAD,CAAQT,UAAU,OAAOU,QAASF,EAAlC,oBAON,SAASG,EAAT,GAAsC,IAAZC,EAAW,EAAXA,QACxB,OAAKA,EAAQC,OAEX,cAACC,EAAA,EAAUC,KAAX,UACE,qCACI,IACDH,EAAQC,OAAS,EAAjB,cACUD,EAAQI,OAAO,GAAGC,KAAK,OAC9BL,EAAQK,KAAK,MAAO,IAJ1B,SAHwB,KAc9B,SAASC,EAAT,GAA0C,IAAdC,EAAa,EAAbA,UAC1B,OACE,cAACL,EAAA,EAAUC,KAAX,UACE,sBAAKf,UAAU,gCAAf,UACE,0CAAamB,EAAUf,SACvB,0CAAae,EAAUd,cAwChBe,MAlCf,WAA4B,IAAD,EACDC,oBAAS,GADR,mBAClBxB,EADkB,KACZyB,EADY,OAEKD,mBAAS,IAFd,mBAElBT,EAFkB,KAETW,EAFS,OAGSF,mBAAS,CAAEjB,MAAO,EAAGC,MAAO,IAHrC,mBAGlBc,EAHkB,KAGPK,EAHO,KAmBzB,OACE,eAAC1B,EAAA,EAAD,CAAM2B,MAAO,CAAEC,MAAO,QAASC,UAAW,UAA1C,UACE,cAAC7B,EAAA,EAAK8B,OAAN,2BAEA,cAAChC,EAAD,CAAoBC,KAAMA,IAC1B,cAACU,EAAD,CAAmBC,SAnBN,WACf,IAAMqB,EAAUC,KAAKC,SAAW,GAAM,IAAM,IAC5CT,EAAQO,GACRN,GAAW,SAACX,GAAD,4BAAiBA,GAAjB,CAA0BiB,OACrCL,GAAa,SAACL,GACZ,IAAMa,EAAS,eAAQb,GAKvB,MAHgB,MAAZU,EAAiBG,EAAU5B,QAC1B4B,EAAU3B,QAER2B,QAWP,eAAClB,EAAA,EAAD,WACE,cAACH,EAAD,CAAgBC,QAASA,IACzB,cAACM,EAAD,CAAkBC,UAAWA,WClFtBc,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.711e398d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heads.69040e03.png\";","export default __webpack_public_path__ + \"static/media/tails.34707fcc.png\";","import Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport Button from \"react-bootstrap/Button\";\n\nimport heads from \"./img/heads.png\";\nimport tails from \"./img/tails.png\";\n\nimport { useState } from \"react\";\n\nfunction CoinFlipperDisplay({ coin }) {\n  if (!coin) return null;\n  return (\n    <Card.Body className=\"pb-0\">\n      <Card.Img\n        variant=\"top\"\n        src={coin === \"H\" ? heads : tails}\n        className=\"w-75\"\n      />\n      <Card.Title className=\"mt-1 text-center\">\n        {coin === \"H\" ? \"Heads!\" : \"Tails!\"}\n      </Card.Title>\n    </Card.Body>\n  );\n}\n\nfunction CoinFlipperButton({ flipCoin }) {\n  return (\n    <Card.Body className=\"d-flex justify-content-center\">\n      <Button className=\"w-50\" onClick={flipCoin}>\n        Flip\n      </Button>\n    </Card.Body>\n  );\n}\n\nfunction CoinFlipperLog({ flipLog }) {\n  if (!flipLog.length) return null;\n  return (\n    <ListGroup.Item>\n      <span>\n        [{\" \"}\n        {flipLog.length > 9\n          ? `... ${flipLog.slice(-9).join(\", \")}`\n          : flipLog.join(\", \")}{\" \"}\n        ]\n      </span>\n    </ListGroup.Item>\n  );\n}\n\nfunction CoinFlipperCount({ flipCount }) {\n  return (\n    <ListGroup.Item>\n      <div className=\"d-flex justify-content-around\">\n        <div>Heads: {flipCount.heads}</div>\n        <div>Tails: {flipCount.tails}</div>\n      </div>\n    </ListGroup.Item>\n  );\n}\n\nfunction CoinFlipperCard() {\n  const [coin, setCoin] = useState(false);\n  const [flipLog, setFlipLog] = useState([]);\n  const [flipCount, setFlipCount] = useState({ heads: 0, tails: 0 });\n\n  const flipCoin = () => {\n    const newCoin = Math.random() < 0.5 ? \"H\" : \"T\";\n    setCoin(newCoin);\n    setFlipLog((flipLog) => [...flipLog, newCoin]);\n    setFlipCount((flipCount) => {\n      const duplicate = { ...flipCount };\n\n      if (newCoin === \"H\") duplicate.heads++;\n      else duplicate.tails++;\n\n      return duplicate;\n    });\n  };\n\n  return (\n    <Card style={{ width: \"300px\", textAlign: \"center\" }}>\n      <Card.Header>Flip a coin!</Card.Header>\n\n      <CoinFlipperDisplay coin={coin} />\n      <CoinFlipperButton flipCoin={flipCoin} />\n\n      <ListGroup>\n        <CoinFlipperLog flipLog={flipLog} />\n        <CoinFlipperCount flipCount={flipCount} />\n      </ListGroup>\n    </Card>\n  );\n}\n\nexport default CoinFlipperCard;\n","import \"./App.css\";\nimport CoinFlipperCard from \"./CoinFlipperCard\";\n\nfunction App() {\n  return <CoinFlipperCard />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}